@page "/closetpro"
@using ApplicationCore.Features.AllmoxyOrderExport
@using ApplicationCore.Features.ClosetProCSVCutList
@using ApplicationCore.Features.ClosetProToAllmoxyOrder
@using ApplicationCore.Shared.Components
@using ApplicationCore.Shared.Services
@using ApplicationCore.Features.ClosetProToAllmoxyOrder.Models;
@using ApplicationCore.Features.ClosetProToAllmoxyOrder.Views;
@using static ApplicationCore.Shared.Components.Button;
@inject IFilePicker FilePicker
@inject ClosetProCSVReader Reader
@inject ClosetProToAllmoxyMapper Mapper
<h3>Closet Pro Order Setup</h3>

<br/>

<MappingSettingsForm Settings="_settings" />

<br/>

<Button Color="ButtonColor.Primary" OnClick="PickFile" Disabled="_isLoading">Pick File</Button>

<br/>

@if (_isLoading) {
    <span>Loading...</span>
}

@if (_isComplete) {
    <span>Order Mapping Complete</span>
}

<br/>

<span>@_error</span>

@code {

    private MappingSettings _settings = new();
    private bool _isLoading = false;
    private bool _isComplete = false;
    private string _error = "";

    public void PickFile() {

        Reset();

        FilePicker.PickFile(new() {
            InitialDirectory = @"C:\Users\Zachary Londono\Downloads",
            Filter = new FilePickerFilter("Closet Pro Cut List", ".csv"),
            Title = "Choose Closet Pro Cut List"
        }, async file => {

            _isLoading = true;
            StateHasChanged();

            try {
                await MapToAllmoxyOrder(file);
                _isComplete = true;
            } catch (Exception ex) {
                _error = ex.Message;
                throw;
            } finally {
                Reset();
                StateHasChanged();
            }


        });

    }

    private void Reset() {
        _isComplete = false;
        _isLoading = false;
    }

    public async Task MapToAllmoxyOrder(string fileName) {

        using var fileStream = new FileStream(fileName, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
        using var textReader = new StreamReader(fileStream);
        var csvData = textReader.ReadToEnd();

        var order = await Reader.ReadCSVData(csvData);

        var products = Mapper.Map(order, _settings);

        await CSVOrderWriter.WriteCSVOrder(products, @"C:\Users\Zachary Londono\Desktop\TestOutput\Allmoxy Output\order.csv");

    }

}
