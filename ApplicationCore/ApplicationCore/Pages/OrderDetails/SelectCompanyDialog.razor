@using ApplicationCore.Features.Companies.List;
@using ApplicationCore.Infrastructure
@inject IBus Bus

@if (_companies is null) {
    <span>Loading...</span>
} else {
    <table>
        <tbody>
            @foreach (var company in _companies) {
                <tr>
                    <td @onclick="() => ReturnCompanyId(company.Id)">@company.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    [CascadingParameter]
    private BlazoredModalInstance BlazoredModal { get; set; } = default!;

    private IEnumerable<CompanyListItem>? _companies = default;

    protected override async Task OnInitializedAsync() {
        BlazoredModal.SetTitle("Select Company");
        var result = await Bus.Send(new GetCompanyList.Query());

        result.Match(
            companies => _companies = companies,
            error => {
                // TODO: log error
            }
        );

    }

    private async Task ReturnCompanyId(Guid companyId) => await BlazoredModal.CloseAsync(ModalResult.Ok(companyId));

}
