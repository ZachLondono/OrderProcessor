
<button @onclick="() => OnClick()" class="@Classes()" disabled="@Disabled">@ChildContent</button>

@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public Action OnClick { get; set; } = new Action(() => { });

    [Parameter]
    public ButtonStyle Style { get; set; } = ButtonStyle.Contained;

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public string Class { get; set; } = string.Empty;

    private string Classes() {

        string baseClass = "font-semibold px-2 py-1.5 rounded disabled:cursor-not-allowed";

        string styleClass = Style switch {
            ButtonStyle.Text => "text-blue-600 enabled:hover:bg-blue-50 enabled:active:bg-blue-200 enabled:focus:bg-blue-100 disabled:text-gray-400",
            ButtonStyle.Outline => "outline outline-1 outline-blue-600 enabled:hover:outline-blue-700 text-blue-600 enabled:hover:bg-blue-50 enabled:active:bg-blue-200 enabled:focus:bg-blue-100 disabled:text-gray-400 disabled:outline-gray-400",
            ButtonStyle.Contained => "text-white bg-blue-600 enabled:hover:bg-blue-500 enabled:active:bg-blue-300 enabled:focus:bg-blue-400 shadow-md enabled:hover:shadow-lg enabled:hover:active:shadow-xl disabled:bg-gray-400",
        };

        return $"{baseClass} {styleClass} {Class}";

    }

    public enum ButtonStyle {
        Contained,
        Outline,
        Text
    }

}
