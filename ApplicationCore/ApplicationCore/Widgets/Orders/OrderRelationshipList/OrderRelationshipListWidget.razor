@using ApplicationCore.Shared.Services;
@inject OrderRelationshipListWidgetViewModel DataContext
@inject NavigationService Navigation

<div class="mb-5">
    <h2 class="font-bold text-xl">@DataContext.RelatedOrders.Count Related Orders</h2>
</div>
<div class="border border-slate-100 rounded-md">
    <table class="table-auto w-full">
        <thead class="border-b bg-slate-100">
            <tr>
                <th class="p-5">#</th>
                <th class="p-5">Name</th>
            </tr>
        </thead>
        <tbody>
            @if (!DataContext.RelatedOrders.Any()) {
                <tr><td colspan="2" class="text-center p-5 font-medium">No Related Orders</td></tr>
            }
            @foreach (var order in DataContext.RelatedOrders) {
                <tr @onclick="() => OpenOrder(order.Id)" class="text-center hover:bg-blue-500/10 cursor-pointer">
                    <td class="p-5 whitespace-nowrap">@order.Number</td>
                    <td class="p-5 whitespace-nowrap">@order.Name</td>
                </tr>
            } 
        </tbody>
    </table>
</div>

@code {

    [Parameter]
    public Guid? OrderId { get; set; }

    protected override async Task OnInitializedAsync() {

        if (OrderId is null) return;

        DataContext.OnPropertyChanged += StateHasChanged;
        await DataContext.LoadRelatedOrders((Guid) OrderId);

    }

    private void OpenOrder(Guid orderId) {
        Navigation.NavigateToOrderPage(orderId);
    }

}
