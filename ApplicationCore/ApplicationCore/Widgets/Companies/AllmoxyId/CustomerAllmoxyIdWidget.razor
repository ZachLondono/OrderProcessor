@using ApplicationCore.Shared.Components
@using static ApplicationCore.Shared.Components.Button;
@inject CustomerAllmoxyIdWidgetViewModel DataContext

@if (CustomerId is null) {

    <span>No customer id set</span>

} else if (!_customerHasAllmoxyId) {

    <span>Customer does not have an Allmoxy ID set up</span>
    <Button Color="ButtonColor.Primary" Style="ButtonStyle.Contained" OnClick="AddNewAllmoxyId">Add Allmoxy Id</Button>

} else {
    
    <div>
        <label for="allmoxyId" class="block text-sm font-medium text-gray-700">Allmoxy Id</label>
        <InputNumber id="allmoxyId" @bind-Value="@_allmoxyId" class="mt-1 w-24 px-3 py-2 rounded-md max-w-md border focus:outline-0 border-gray-300 focus:border-primary focus:ring-2 focus:ring-primary ease-in-out duration-300" />
        <Button Color="ButtonColor.Primary" Style="ButtonStyle.Contained" OnClickAsync="SaveChanges">Save</Button>
    </div>

}


@code {

    [Parameter]
    public Guid? CustomerId { get; set; }

    private bool _isCreatingNewAllmoxyId = false;
    private bool _customerHasAllmoxyId = false;
    private int _allmoxyId = 0;

    protected override async Task OnInitializedAsync() {

        if (CustomerId is null) return;

        int? allmoxyId = await DataContext.GetCustomerAllmoxyId((Guid) CustomerId);

        if (allmoxyId is int id) {
            _customerHasAllmoxyId = true;
            _allmoxyId = id;
        } else {
            _customerHasAllmoxyId = false;
        }

    }

    public void AddNewAllmoxyId() {

        if (CustomerId is null) return;

        _customerHasAllmoxyId = true;
        _isCreatingNewAllmoxyId = true;
        StateHasChanged();

    }

    public async Task SaveChanges() {

        if (CustomerId is null) return;

        if (_isCreatingNewAllmoxyId) {
            await DataContext.AddCustomerAllmoxyId((Guid)CustomerId, _allmoxyId);
            _isCreatingNewAllmoxyId = false;
        } else {
            await DataContext.SetCustomerAllmoxyId((Guid) CustomerId, _allmoxyId);
        }

        StateHasChanged();

    }

}
