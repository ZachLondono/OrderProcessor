@using Domain.Infrastructure.Bus
@using ApplicationCore.Shared.Settings
@using Microsoft.Extensions.Logging
@using Domain.Infrastructure.Settings;
@using Domain.Components
@using static Domain.Components.Button;

@if (_error is not null) {
    
    <div class="text-red-600">
        <h3>@_error.Title</h3>
        <span>@_error.Details</span>
    </div>

} else if (_settings is not null) {
    
    <EditForm Model="_settings" OnValidSubmit="SaveChanges">

        <div>
            <label>Sender Name</label>
            <InputText @bind-Value="_settings.SenderName" class="input-text w-full" />
        </div>

        <div>
            <label>Sender Email</label>
            <InputText @bind-Value="_settings.SenderEmail" class="input-text w-full" />
        </div>

        <div>
            <label>Protected Password</label>
            <InputText @bind-Value="_settings.ProtectedPassword" class="input-text w-full" />
        </div>

        <hr class="my-5"/>

        <div>
            <label>Host</label>
            <InputText @bind-Value="_settings.Host" class="input-text w-full" />
        </div>

        <div>
            <label>Port</label>
            <InputNumber @bind-Value="_settings.Port" class="input-text w-full" step="1" />
        </div>

        <hr class="my-5"/>

        <div>
            <label>Bcc Recipients</label>
            <InputText @bind-Value="_settings.BccRecipients" class="input-text w-full" />
        </div>

        <div class="my-5">
            <Button type="submit" Color="ButtonColor.Primary">Save</Button>
        </div>

    </EditForm>

    @if (_message is not null) {
        <span>@_message</span>
    }

}

@code {

    private Error? _error = null;

    private EmailSettings? _settings = null;

    private string? _message = null;

    [Inject]
    public IWritableOptions<EmailSettings>? Options { get; set; }

    [Inject]
    public ILogger<EmailSettingsEditor>? Logger { get; set; }

    protected override void OnInitialized() {

        if (Options is null) return;

        try {
            _settings = Options.Value;
        } catch (Exception ex) {
            Logger?.LogError(ex, "Exception thrown while trying to load email settings.");
        }

        if (_settings is null) {

            _error = new() {
                Title = "Error",
                Details = "Settings could not be loaded"
            };

        } else {
            _error = null;
        }

    }

    private void SaveChanges() {

        if (Options is null || _settings is null) return;

        try {

            _message = null;

            Options.Update(settings => {
                settings.Port = _settings.Port;
                settings.Host = _settings.Host;
                settings.SenderName = _settings.SenderName;
                settings.SenderEmail = _settings.SenderEmail;
                settings.ProtectedPassword = _settings.ProtectedPassword;
                settings.BccRecipients = _settings.BccRecipients;
            });

            _error = null;
            _message = "Settings will be applied next time application is reset.";

        } catch (Exception ex) {

            Logger?.LogError(ex, "Exception thrown while trying to save email settings.");

            _error = new() {
                Title = "Error",
                Details = "Changes could not be saved"
            };

        }

    }

}
