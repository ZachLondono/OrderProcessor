@using static ApplicationCore.Shared.Components.Button;
@using ApplicationCore.Shared.Components
@using ApplicationCore.Shared.Components.ProgressModal;
@using ApplicationCore.Shared.Services;
@inject OrderReleaseModalViewModel DataContext
@inject IFilePicker FilePicker

@if (DataContext.IsLoadingConfiguration) {
    <span>Loading release configuration...</span>
} else {

    <div class="flex flex-col space-y-5">

        @if(_errorMessage is not null) {
            
            <section>
                <span class="text-red-600">@_errorMessage</span>
            </section>

        }

        <section>

            <h3 class="font-semibold mb-3">Release PDF</h3>

            <CheckBox @bind-IsChecked="DataContext.Configuration.GenerateJobSummary">
                <span class="text-gray-700">Job Summary</span>
            </CheckBox>

            @if(DataContext.Configuration.GenerateJobSummary) {
                <div class="ml-5">
                    <div>
                        <CheckBox @bind-IsChecked="DataContext.Configuration.IncludeProductTablesInSummary">
                            <span class="text-gray-700 text-sm">Include products table in summary</span>
                        </CheckBox>
                    </div>
                    <div>
                        <CheckBox @bind-IsChecked="DataContext.Configuration.IncludeSuppliesInSummary">
                            <span class="text-gray-700 text-sm">Include supplies in summary</span>
                        </CheckBox>
                    </div>
                </div>
            } else {
                <br />
            }
            
            <CheckBox @bind-IsChecked="DataContext.Configuration.GeneratePackingList">
                <span class="text-gray-700">Packing List</span>
            </CheckBox>
            
            <br />
            
            <CheckBox @bind-IsChecked="DataContext.Configuration.GenerateCNCRelease">
                <span class="text-gray-700">CNC Patterns</span>
            </CheckBox>
            @if (DataContext.Configuration.GenerateCNCRelease) {
                @if (DataContext.IsReportLoadingFiles) {
                    <span class="mt-3">Searching for files...</span>
                } else {
                    <div class="mt-3 ml-3">
                        <div>
                            <Button OnClick="ChooseCNCDataFile" Color="ButtonColor.Secondary">+ Add File</Button>
                            <CheckBox @bind-IsChecked="DataContext.Configuration.CopyCNCReportToWorkingDirectory">
                                <span class="text-gray-700 text-sm">Copy to working directory</span>
                            </CheckBox>
                        </div>

                        @if (DataContext.Configuration.CNCDataFilePaths.Any()) {
                            foreach (var file in DataContext.Configuration.CNCDataFilePaths) {
                                <div class="text-sm">
                                    <Button OnClick="@(() => RemoveCNCDataFile(file))">X</Button>@TruncateString(file)
                                </div>
                            }
                        } else {
                            <div class="text-sm">No File Selected</div>
                        }
                    </div>
                }
            }

            @if (DataContext.Configuration.GenerateJobSummary || DataContext.Configuration.GeneratePackingList || DataContext.Configuration.GenerateCNCRelease) {

                <br />

                <CheckBox @bind-IsChecked="DataContext.Configuration.IncludeInvoiceInRelease">
                    <span class="text-gray-700">Include Invoice</span>
                </CheckBox>

                <br />

                <CheckBox @bind-IsChecked="DataContext.Configuration.SendReleaseEmail">
                    <span class="text-gray-700">Send Email</span>
                </CheckBox>
                @if (DataContext.Configuration.SendReleaseEmail) {
                    <div class="ml-3">
                        <CheckBox @bind-IsChecked="DataContext.Configuration.IncludeSummaryInEmailBody">
                            <span class="text-gray-700 text-sm">Include summary</span>
                        </CheckBox>
                        <label class="block text-sm font-medium text-gray-700">Email Recipients</label>
                        <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.ReleaseEmailRecipients" />
                    </div>
                }

                <br />

                <label class="block text-sm font-medium text-gray-700">File Name</label>
                <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.ReleaseFileName" />

                <br />

                <label class="block text-sm font-medium text-gray-700">Output Directory</label>
                <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.ReleaseOutputDirectory" />

            }

        </section>

        <hr />

        <section>

            <h3 class="font-semibold mb-3">Invoice</h3>

            <CheckBox @bind-IsChecked="DataContext.Configuration.GenerateInvoice">
                <span class="text-gray-700">Save Invoice PDF</span>
            </CheckBox>
            @if (DataContext.Configuration.GenerateInvoice) {
                <label class="block text-sm font-medium text-gray-700">File Name</label>
                <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.InvoiceFileName" />

                <br />

                <label class="block text-sm font-medium text-gray-700">Output Directory</label>
                <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.InvoiceOutputDirectory" />
            }

            <br />

            <CheckBox @bind-IsChecked="DataContext.Configuration.SendInvoiceEmail">
                <span class="text-gray-700">Send Invoice Email</span>
            </CheckBox>
            @if (DataContext.Configuration.SendInvoiceEmail) {
                <label class="block text-sm font-medium text-gray-700">Email Recipients</label>
                <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.InvoiceEmailRecipients"/>
            }

        </section>

        <section>
            <Button Color="ButtonColor.Primary" Style="ButtonStyle.Text" OnClickAsync="ShowReleaseProgressModal">Release</Button>
            <Button Color="ButtonColor.Secondary" Style="ButtonStyle.Text" OnClickAsync="Cancel">Cancel</Button>
        </section>

    </div>
}

