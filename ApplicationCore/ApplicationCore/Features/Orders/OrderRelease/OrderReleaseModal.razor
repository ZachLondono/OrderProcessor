@using static Domain.Components.Button;
@using Domain.Infrastructure.Bus;
@using Domain.Components
@using Domain.Components.ProgressModal;
@using ApplicationCore.Shared.Services;
@using Domain.Services;
@inject OrderReleaseModalViewModel DataContext
@inject IFilePicker FilePicker

@if (DataContext.IsLoadingOrders) {

    <div class="text-center mb-4 font-bold text-blue-700">Loading Orders...</div>
    <svg class="animate-spin mx-auto h-12 w-12 text-blue-700" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-10" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
    </svg>

} else if (DataContext.IsLoadingConfiguration) {

    <div class="text-center mb-4 font-bold text-blue-700">Loading Release Configuration...</div>
    <svg class="animate-spin mx-auto h-12 w-12 text-blue-700" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-10" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
    </svg>

} else if (!OrderIds.Any()) {
    <span>No orders selected to release</span>
    <Button Color="ButtonColor.Secondary" Style="ButtonStyle.Text" OnClickAsync="Cancel">Cancel</Button>
} else {

    <div class="flex flex-col space-y-5">

        @if(_errorMessage is not null) {
            
            <section>
                <span class="text-red-600">@_errorMessage</span>
            </section>

        }

        <section>

            <h3 class="font-semibold mb-3">Release PDF</h3>

            <CheckBox @bind-IsChecked="DataContext.Configuration.GenerateJobSummary">
                <span class="text-gray-700">Job Summary</span>
            </CheckBox>

            @if(DataContext.Configuration.GenerateJobSummary) {
                <div class="ml-5">
                    <div>
                        <CheckBox @bind-IsChecked="DataContext.Configuration.IncludeProductTablesInSummary">
                            <span class="text-gray-700 text-sm">Include products table in summary</span>
                        </CheckBox>
                    </div>
                </div>
            } else {
                <br />
            }
            
            <CheckBox @bind-IsChecked="DataContext.Configuration.GeneratePackingList">
                <span class="text-gray-700">Packing List</span>
            </CheckBox>
            @if(DataContext.Configuration.GeneratePackingList) {
                <div class="ml-5">
                    @if (DataContext.DoAnyOrdersContainDovetailDBs) {
                        <div>
                            <CheckBox @bind-IsChecked="DataContext.Configuration.IncludeDovetailDBPackingList">
                                <span class="text-gray-700 text-sm">Dovetail DB Packing List</span>
                            </CheckBox>
                        </div>
                    }
                    <div>
                        <CheckBox @bind-IsChecked="DataContext.Configuration.IncludeCheckBoxesInPackingList">
                            <span class="text-gray-700 text-sm">Include check boxes in packing list</span>
                        </CheckBox>
                    </div>
                    <div>
                        <CheckBox @bind-IsChecked="DataContext.Configuration.IncludeSignatureFieldInPackingList">
                            <span class="text-gray-700 text-sm">Include signature field in packing list</span>
                        </CheckBox>
                    </div>
                </div>
            } else {
                <br />
            }

            @if(DataContext.DoAnyOrdersContainFivePieceDoors) {
                <CheckBox @bind-IsChecked="DataContext.Configuration.Generate5PieceCutList">
                    <span class="text-gray-700">Five-Piece Door Cut List</span>
                </CheckBox>
                <br />
            }

            @if(DataContext.DoAnyOrdersContainDoweledDrawerBoxes) {
                <CheckBox @bind-IsChecked="DataContext.Configuration.GenerateDoweledDrawerBoxCutList">
                    <span class="text-gray-700">Doweled Drawer Box Cut List</span>
                </CheckBox>
                <br />
            }
            
            @if (DataContext.DoAnyOrdersContainCNCParts) {
                <CheckBox @bind-IsChecked="DataContext.Configuration.GenerateCNCGCode">
                    <span class="text-gray-700">Generate GCode</span>
                </CheckBox>
                <br />
            }

            <CheckBox @bind-IsChecked="DataContext.Configuration.GenerateHardwareList">
                <span class="text-gray-700">Hardware List</span>
            </CheckBox>
            <br />

            <CheckBox @bind-IsChecked="DataContext.Configuration.GenerateCNCRelease">
                <span class="text-gray-700">CNC Patterns</span>
            </CheckBox>
            @if (DataContext.Configuration.GenerateCNCRelease) {
                @if (DataContext.IsReportLoadingFiles) {
                    <span class="mt-3">Searching for files...</span>
                } else {
                    <div class="mt-3 ml-3">
                        <div>
                            <Button OnClick="ChooseCNCDataFile" Color="ButtonColor.Secondary">+ Add File</Button>
                            <CheckBox @bind-IsChecked="DataContext.Configuration.CopyCNCReportToWorkingDirectory">
                                <span class="text-gray-700 text-sm">Copy to working directory</span>
                            </CheckBox>
                        </div>

                        @if (DataContext.Configuration.CNCDataFilePaths.Any()) {
                            foreach (var file in DataContext.Configuration.CNCDataFilePaths) {
                                <div class="text-sm">
                                    <Button OnClick="@(() => RemoveCNCDataFile(file))">X</Button>@TruncateString(file)
                                </div>
                            }
                        } else {
                            <div class="text-sm">No File Selected</div>
                        }
                    </div>
                }
            }
 
            <br />
            
            <CheckBox @bind-IsChecked="DataContext.Configuration.AttachAdditionalFiles">
                <span class="text-gray-700">Additional Files</span>
            </CheckBox>
            @if (DataContext.Configuration.AttachAdditionalFiles) {
                     <div class="mt-3 ml-3">
                        <div>
                            <Button OnClick="ChooseAdditionalFile" Color="ButtonColor.Secondary">+ Add File</Button>
                        </div>

                        @if (DataContext.Configuration.AdditionalFilePaths.Any()) {
                            foreach (var file in DataContext.Configuration.AdditionalFilePaths) {
                                <div class="text-sm">
                                    <Button OnClick="@(() => RemoveAdditionalFile(file))">X</Button>@TruncateString(file)
                                </div>
                            }
                        } else {
                            <div class="text-sm">No File Selected</div>
                        }
                    </div>                           
            }

            @if (DataContext.Configuration.AreMainPDFOptionsEnabled) {

                <br />

                <CheckBox @bind-IsChecked="DataContext.Configuration.IncludeInvoiceInRelease">
                    <span class="text-gray-700">Include Invoice</span>
                </CheckBox>

                <br />

                <CheckBox @bind-IsChecked="DataContext.Configuration.SendReleaseEmail">
                    <span class="text-gray-700">Send Email</span>
                </CheckBox>
                @if (DataContext.Configuration.SendReleaseEmail) {
                    <div class="ml-3">
                        <div>
                            <CheckBox @bind-IsChecked="DataContext.Configuration.IncludeMaterialSummaryInEmailBody">
                                <span class="text-gray-700 text-sm">Include material summary</span>
                            </CheckBox>
                        </div>
                        <div>
                            <CheckBox @bind-IsChecked="DataContext.Configuration.PreviewReleaseEmail">
                                <span class="text-gray-700 text-sm">Preview email before sending</span>
                            </CheckBox>
                        </div>
                        <label class="block text-sm font-medium text-gray-700">Email Recipients</label>
                        <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.ReleaseEmailRecipients" />
                    </div>
                }

                <br />

                <label class="block text-sm font-medium text-gray-700">File Name</label>
                <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.ReleaseFileName" />

                <br />

                <label class="block text-sm font-medium text-gray-700">Output Directory</label>
                <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.ReleaseOutputDirectory" />

            }

        </section>

        <hr />

        <section>

            <h3 class="font-semibold mb-3">Invoice</h3>

            <CheckBox @bind-IsChecked="DataContext.Configuration.GenerateInvoice">
                <span class="text-gray-700">Save Invoice PDF</span>
            </CheckBox>
            @if (DataContext.Configuration.GenerateInvoice) {
                <label class="block text-sm font-medium text-gray-700">File Name</label>
                <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.InvoiceFileName" />

                <br />

                <label class="block text-sm font-medium text-gray-700">Output Directory</label>
                <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.InvoiceOutputDirectory" />
            }

            <br />

            <CheckBox @bind-IsChecked="DataContext.Configuration.SendInvoiceEmail">
                <span class="text-gray-700">Send Invoice Email</span>
            </CheckBox>
            @if (DataContext.Configuration.SendInvoiceEmail) {
                <div class="ml-3">
                    <div>
                        <CheckBox @bind-IsChecked="DataContext.Configuration.PreviewInvoiceEmail">
                            <span class="text-gray-700 text-sm">Preview email before sending</span>
                        </CheckBox>
                    </div>
    
                    <label class="block text-sm font-medium text-gray-700">Email Recipients</label>
                    <input type="text" class="input-text mt-1 w-full" @bind="DataContext.Configuration.InvoiceEmailRecipients"/>
                </div>
            }

        </section>

        <section>
            <Button Color="ButtonColor.Primary" Style="ButtonStyle.Text" OnClickAsync="ShowReleaseProgressModal" Disabled="_isReleasing">Release</Button>
            <Button Color="ButtonColor.Secondary" Style="ButtonStyle.Text" OnClickAsync="Cancel" Disabled="_isReleasing">Cancel</Button>
        </section>

    </div>
}

