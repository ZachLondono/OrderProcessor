@using Domain.Components
@using Domain.Infrastructure.Bus
@using Domain.ValueObjects
@using MediatR
@using static Domain.Components.Button

@if (_error is not null) {
    <p class="text-red-600">@_error</p>   
}

<EditForm Model="Model">

    <div>
        <label>
            Qty
            <InputNumber @bind-Value="Model.Qty" />
        </label>
    </div>

    <div>
        <label>
            Unit Price
            <InputNumber @bind-Value="Model.UnitPrice" />
        </label>
    </div>

    <div>
        <label>
            Product Number
            <InputNumber @bind-Value="Model.ProductNumber" />
        </label>
    </div>

    <div>
        <label>
            Room
            <InputText @bind-Value="Model.Room" />
        </label>
    </div>

    <div>
        <label>
            Width
            <InputNumber @bind-Value="Model.Width" />
        </label>
    </div>

    <div>
        <label>
            Height
            <InputNumber @bind-Value="Model.Height" />
        </label>
    </div>

    <div>
        <label>
            Depth
            <InputNumber @bind-Value="Model.Depth" />
        </label>
    </div>

    <div>
        <label>
            Box Material
            <InputText @bind-Value="Model.BoxMaterial" />
        </label>
    </div>

    <div>
        <label>
            Bottom Material
            <InputText @bind-Value="Model.BottomMaterial" />
        </label>
    </div>

    <div>
        <label>
            Notches
            <InputText @bind-Value="Model.Notches" />
        </label>
    </div>

    <div>
        <label>
            Clips
            <InputText @bind-Value="Model.Clips" />
        </label>
    </div>

    <div>
        <label>
            Accessory
            <InputText @bind-Value="Model.Accessory" />
        </label>
    </div>

    <div>
        <label>
            Note
            <InputText @bind-Value="Model.Note" />
        </label>
    </div>

    <Button Type="submit" Color="ButtonColor.Primary" OnClickAsync="AddProductToOrder">Add</Button>
    <Button Color="ButtonColor.Danger" OnClickAsync="Cancel">Cancel</Button>

</EditForm>

@code {

    [Inject]
    public IBus Bus { get; set; } = default!;

    [Parameter]
    [EditorRequired]
    public Guid OrderId { get; set; }

    [Parameter]
    public string Room { get; set; } = string.Empty;

    [CascadingParameter]
    public BlazoredModalInstance ModalInstance { get; set; } = default!;

    private NewDovetailDB Model { get; } = new();

    private string? _error = null;

    protected override void OnInitialized() {

        if (Room is not null) {
            Model.Room = Room;
        }

        base.OnInitialized();

    }

    public Task Cancel() => ModalInstance.CancelAsync();

    public async Task AddProductToOrder() {

        _error = null;

        var result = await Bus.Send(new InsertDovetailDBProductInOrder.Command(OrderId, Model));

        await result.Match(
            door => ModalInstance.CloseAsync(ModalResult.Ok(door)),
            error => {
                _error = error.Title;
                return Task.CompletedTask;
            }
        );

    }

}
