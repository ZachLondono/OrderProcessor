@using ApplicationCore.Features.Companies.Contracts;
@using ApplicationCore.Features.Orders.Details;
@using ApplicationCore.Features.Orders.Details.ProductTables
@using ApplicationCore.Features.Orders.OrderExport;
@using ApplicationCore.Features.Orders.Shared.Domain
@using ApplicationCore.Features.Orders.Shared.Domain.ValueObjects;
@using ApplicationCore.Features.Orders.OrderRelease
@using ApplicationCore.Features.Orders.Shared.State;
@using ApplicationCore.Features.Shared.Services;
@using ApplicationCore.Features.WorkOrders;
@using ApplicationCore.Infrastructure
@using System.Diagnostics
@using ApplicationCore.Features.Shared.Components
@using ApplicationCore.Features.Orders.Shared.Domain.Products;
@using ApplicationCore.Features.Orders.Shared;
@using ApplicationCore.Features.Orders.Shared.Domain.Enums;
@using ApplicationCore.Infrastructure.Bus;
@using ApplicationCore.Pages.OrderDetails;
@using ApplicationCore.Infrastructure.UI
@using static ApplicationCore.Features.Shared.Components.DropDown;
@using static ApplicationCore.Features.Shared.Components.Button;
@using static ApplicationCore.Features.Orders.Details.ProductTables.MDFDoorProductTable;
@using static ApplicationCore.Features.Orders.Details.ProductTables.DovetailDrawerBoxProductTable;
@using static ApplicationCore.Features.Orders.Details.ProductTables.ClosetPartProductTable;
@using static ApplicationCore.Features.Orders.Details.ProductTables.CabinetProductTable;
@using ApplicationCore.Features.Companies.Contracts.ValueObjects;
@using ApplicationCore.Features.WorkOrders.Contracts;
@inherits UIListenerComponent<WorkOrdersUpdateNotification>
@inject IBus Bus
@inject OrderState OrderState
@inject Manufacturing.IsProductComplete IsProductComplete
@inject IFilePicker FilePicker
@inject NavigationService NavigationService
@inject CompanyDirectory.GetVendorByIdAsync GetVendorByIdAsync 
@inject CompanyDirectory.GetCustomerByIdAsync GetCustomerByIdAsync 

@if (OrderState.Order is null) {
    <span>Order was not found or no order was selected</span>
} else {
    
    <section id="summary">
        <div class="mb-4">
            <label id="number" class="text-lg w-24 inline-block dark:text-gray-400">Number</label>
            <span class="text-xl w-64 border-b-2 border-gray-400 dark:text-white">@OrderState.Order.Number</span>
            @if (OrderState.Order.Rush) {
                <span class="p-2 text-white font-bold bg-red-500">RUSH</span>
            }
        </div>
        <div>
            <label id="name" class="text-lg w-24 inline-block dark:text-gray-400">Name</label>
            <span class="text-xl w-64 border-b-2 border-gray-400 dark:text-white">@OrderState.Order.Name</span>
        </div>
        <div>
            <label id="orderdate" class="text-md w-24 inline-block dark:text-gray-400">Order Date</label>
            <span class="text-lg dark:text-white">@OrderState.Order.OrderDate.ToShortDateString()</span>
        </div>
    </section>

    <section class="mt-10" id="actions">
        @ChildContent
    </section>

    <section class="mt-10" id="companyInfo">
        <div>
            @if (_customerName is not null) {
                <label id="customer" class="text-md w-24 inline-block dark:text-gray-400 h-5 align-middle">Customer</label>
                <span class="text-lg hover:underline cursor-pointer dark:text-white h-5 align-middle" @onclick="() => OpenCustomerPage(OrderState.Order.CustomerId)">@_customerName</span>
            } else {
                <span>No customer info</span>
            }
        </div>
        <div>
            @if(_vendorName is not null) {
                <label id="vendor" class="text-md w-24 inline-block dark:text-gray-400 h-5 align-middle">Vendor</label>
                <span class="text-lg hover:underline cursor-pointer dark:text-white h-5 align-middle" @onclick="() => OpenVendorPage(OrderState.Order.VendorId)">@_vendorName</span>
            } else {
                <span>No vendor info</span>
            }
        </div>
        <div>
            <label id="comment" class="text-md w-24 inline-block dark:text-gray-400">Comment</label>
            <span class="text-lg dark:text-white">@OrderState.Order.CustomerComment</span>
        </div>
    </section>

    <section class="mt-10" id="editSection">
        <div>
            <label for="note" class="mr-3">Note</label>
            <Button OnClickAsync="@SaveChangesAsync" Size="ButtonSize.XSmall" Style="ButtonStyle.Text" Disabled="!OrderState.IsDirty">Save</Button>
        </div>
        <textarea id="note" placeholder="Order Note..." class="w-full" @oninput="OnNoteChanged">@_note</textarea>
        <label for="wd">Working Directory</label>
        <input type="text" id="wd" placeholder="C:/" class="input-text w-full" @oninput="OnWorkingDirectoryChanged" value="@_workingDirectory" />
    </section>

    <section class="mt-10" id="shipping">

        <div>
            <label id="shippingmethod" class="text-md w-24 inline-block dark:text-gray-400">Method</label>
            <span class="text-lg dark:text-white">@OrderState.Order.Shipping.Method</span>
        </div>

        <div>
            <label id="shippingcontact" class="text-md w-24 inline-block dark:text-gray-400">Contact</label>
            <span class="text-lg dark:text-white">@OrderState.Order.Shipping.Contact</span>
        </div>

        <div>
            <label id="shippingphone" class="text-md w-24 inline-block dark:text-gray-400">Phone</label>
            <span class="text-lg dark:text-white">@OrderState.Order.Shipping.PhoneNumber</span>
        </div>


        <div>
            <h3 class="text-md w-24 inline-block dark:text-gray-400">Address</h3>
            <div class="ml-5">
                <div>
                    <label id="shippingline1" class="text-sm w-24 inline-block dark:text-gray-400">Line 1</label>
                    <span class="text-md dark:text-white">@OrderState.Order.Shipping.Address.Line1</span>
                </div>

                <div>
                    <label id="shippingline2" class="text-sm w-24 inline-block dark:text-gray-400">Line 2</label>
                    <span class="text-md dark:text-white">@OrderState.Order.Shipping.Address.Line2</span>
                </div>

                <div>
                    <label id="shippingline3" class="text-sm w-24 inline-block dark:text-gray-400">Line 3</label>
                    <span class="text-md dark:text-white">@OrderState.Order.Shipping.Address.Line3</span>
                </div>

                <div>
                    <label id="shippingcity" class="text-sm w-24 inline-block dark:text-gray-400">City</label>
                    <span class="text-md dark:text-white">@OrderState.Order.Shipping.Address.City</span>
                </div>

                <div>
                    <label id="shippingstate" class="text-sm w-24 inline-block dark:text-gray-400">State</label>
                    <span class="text-md dark:text-white">@OrderState.Order.Shipping.Address.State</span>
                </div>

                <div>
                    <label id="shippingzip" class="text-sm w-24 inline-block dark:text-gray-400">Zip</label>
                    <span class="text-md dark:text-white">@OrderState.Order.Shipping.Address.Zip</span>
                </div>

                <div>
                    <label id="shippingcountry" class="text-sm w-24 inline-block dark:text-gray-400">Country</label>
                    <span class="text-md dark:text-white">@OrderState.Order.Shipping.Address.Country</span>
                </div>
            </div>
        </div>

    </section>

    <section class="mt-10" id="prices">
        <div>
            <label id="subtotal" class="text-md w-24 inline-block dark:text-gray-400">Sub Total</label>
            <span class="text-lg dark:text-white">$@(OrderState.Order.SubTotal.ToString("0.00"))</span>
        </div>
        @if(OrderState.Order.PriceAdjustment != 0M) {
            <div>
                <label id="subtotal" class="text-md w-24 inline-block dark:text-gray-400">Price Adj.</label>
                <span class="text-lg dark:text-white">$@(OrderState.Order.PriceAdjustment.ToString("0.00"))</span>
            </div>
            <div>
                <label id="subtotal" class="text-md w-24 inline-block dark:text-gray-400">Net Total</label>
                <span class="text-lg dark:text-white">$@(OrderState.Order.AdjustedSubTotal.ToString("0.00"))</span>
            </div>
        }
        <div>
            <label id="tax" class="text-md w-24 inline-block dark:text-gray-400">Tax</label>
            <span class="text-lg dark:text-white">$@(OrderState.Order.Tax.ToString("0.00"))</span>
        </div>
        <div>
            <label id="shipping" class="text-md w-24 inline-block dark:text-gray-400">Shipping</label>
            <span class="text-lg dark:text-white">$@(OrderState.Order.Shipping.Price.ToString("0.00"))</span>
        </div>
        <div>
            <label id="totalprice" class="text-md w-24 inline-block dark:text-gray-400">Total Price</label>
            <span class="text-lg dark:text-white">$@(OrderState.Order.Total.ToString("0.00"))</span>
        </div>
    </section>

    @if (OrderState.Order.Info.Count() != 0) {
        <section class="mt-10" id="dynamicValues">
            <table>
                <thead class="border-b border-slate-300">
                    <tr class="dark:bg-slate-700 dark:text-gray-500">
                        <th class="px-3">Name</th>
                        <th class="px-3">Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in OrderState.Order.Info) {
                        <tr class="border-b dark:border-slate-500">
                            <td class="px-3 font-medium dark:text-gray-400">@item.Key</td>
                            <td class="px-3 dark:text-white">@item.Value</td>
		                </tr>
                    }
                </tbody>
            </table>
	    </section>
    }

    @if(OrderState.Order.AdditionalItems.Count() != 0) {
        <section class="mt-10" id="additionalItems">
		    <table class="table-auto">
			    <thead class="border-b border-slate-300">
                    <tr class="dark:bg-slate-700 dark:text-gray-500">
					    <th class="px-3">Description</th>
					    <th class="px-3">Price</th>
				    </tr>
			    </thead>
			    <tbody>
                    @foreach (var item in OrderState.Order.AdditionalItems) {
                        <tr>
                            <td class="px-3 border-b font-medium dark:border-slate-500 dark:text-gray-400">@item.Description</td>
                            <td class="px-3 border-b dark:border-slate-500 dark:text-white">$@item.Price.ToString("0.00")</td>
				        </tr>
                    }
			    </tbody>
		    </table>
	    </section>
    }

    <section class="mt-10" id="products">
        <header>
            <h3 class="dark:text-gray-400">Products (@OrderState.Order.Products.Sum(b => b.Qty))</h3>
        </header>
        <div class="my-2">
            <button disabled="@_useInches" @onclick="ToggleUnits" class="btn-secondary dark:disabled:bg-sky-500 disabled:bg-sky-500 px-3.5 py-1 rounded-r-none rounded-l-md w-14 transition ease-in-out duration-300">in</button><!--
         --><button disabled="@(!_useInches)" @onclick="ToggleUnits" class="btn-secondary dark:disabled:bg-sky-500 disabled:bg-sky-500 px-3.5 py-1 rounded-l-none rounded-r-md w-14 transition ease-in-out duration-300">mm</button>
		</div>
        @if (OrderState.Order.Products.Count() == 0) {
            <span>No products in order</span>
        } else {

            if (DrawerBoxes.Any()) {
                <section class="mt-5">
                    <h3>Drawer Boxes</h3>
                    <DovetailDrawerBoxProductTable UseInches="@_useInches" DrawerBoxes="@DrawerBoxes" />
                </section>
            }

            if (Cabinets.Any()) {
                <section class="mt-5">
                    <h3>Cabinets</h3>
                    <CabinetProductTable UseInches="@_useInches" Cabinets="@Cabinets" />
                </section>
            }

            if (ClosetParts.Any()) {
                <section class="mt-5">
                    <h3>Closet Parts</h3>
                    <ClosetPartProductTable UseInches="@_useInches" ClosetParts="@ClosetParts" />
                </section>
            }

            if (Doors.Any()) {
                <section class="mt-5">
                    <h3>MDF Doors</h3>
                    <MDFDoorProductTable UseInches="@_useInches" MDFDoors="@Doors" />
                </section>
      
            }

        }
    </section>

}
