@using ApplicationCore.Features.Orders.Shared.Domain.Products;
@using ApplicationCore.Features.Orders.Shared.Domain;

<div class="overflow-x-auto rounded-md">
    <table class="table-auto">
        <thead class="border-b border-slate-300">
            <tr class="dark:bg-slate-700 dark:text-gray-500">
                <th class="p-5">Qty</th>
                <th class="p-5">Height</th>
                <th class="p-5">Width</th>
                <th class="p-5">Depth</th>
                <th class="p-5">Box Material</th>
                <th class="p-5">Fin Material</th>
                <th class="p-5">EB Color</th>
                <th class="p-5">Left</th>
                <th class="p-5">Right</th>
                <th class="p-5">Assembled</th>
                <th class="p-5">Room</th>
                <th class="p-5">Unit $</th>
                <th class="p-5">Ext. $</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cabinet in Cabinets) {
                <tr>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@cabinet.Qty</td>
                    @if (UseInches) {
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@((MarkupString)cabinet.Height.GetFormatedFraction())"</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@((MarkupString)cabinet.Width.GetFormatedFraction())"</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@((MarkupString)cabinet.Depth.GetFormatedFraction())"</td>
                    } else {
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@cabinet.Height.AsMillimeters().ToString("0.00")</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@cabinet.Width.AsMillimeters().ToString("0.00")</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@cabinet.Depth.AsMillimeters().ToString("0.00")</td>
                    }
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@($"{cabinet.BoxMaterial.Finish}/{cabinet.BoxMaterial.Core}")</td>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@($"{cabinet.FinishMaterial.Finish}/{cabinet.FinishMaterial.Core}")</td>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@cabinet.EdgeBandingColor</td>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@cabinet.LeftSide.Type.ToString()</td>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@cabinet.RightSide.Type.ToString()</td>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@(cabinet.Assembled ? "Yes" : "No")</td>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@cabinet.Room</td>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@cabinet.UnitPrice.ToString("$0.00")</td>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@((cabinet.UnitPrice * cabinet.Qty).ToString("$0.00"))</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {

    [Parameter]
    public IEnumerable<Cabinet> Cabinets { get; set; } = Enumerable.Empty<Cabinet>();
    [Parameter]
    public bool UseInches { get; set; }

}
