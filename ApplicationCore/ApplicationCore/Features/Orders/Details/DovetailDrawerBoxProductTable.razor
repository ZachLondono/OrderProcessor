@using ApplicationCore.Features.Orders.Shared.Domain.Products;
@using ApplicationCore.Features.Orders.Shared.Domain.ValueObjects;
@using ApplicationCore.Features.Orders.Shared.Domain;
@using ApplicationCore.Infrastructure;
@using ApplicationCore.Features.Orders.Shared;
@using ApplicationCore.Features.Orders.Shared.Domain.Enums;
@inject IBus Bus

<div class="overflow-x-auto rounded-md">
    <table class="table-auto">
        <thead class="border-b border-slate-300">
            <tr class="dark:bg-slate-700 dark:text-gray-500">
                <th colspan="15"></th>
                <th colspan="3" class="border-l border-r">U Box</th>
                <th colspan="2" class="border-r">Fixed Divs.</th>
                <th colspan="2"></th>
            </tr>
            <tr class="dark:bg-slate-700 dark:text-gray-500">
                <th class="p-5">#</th>
                <th class="p-5">Qty</th>
                <th class="p-5">Height</th>
                <th class="p-5">Width</th>
                <th class="p-5">Depth</th>
                <th class="p-5">Front Material</th>
                <th class="p-5">Side Material</th>
                <th class="p-5">Back Material</th>
                <th class="p-5">Bottom Material</th>
                <th class="p-5">Scoop</th>
                <th class="p-5">Logo</th>
                <th class="p-5">Post Finish</th>
                <th class="p-5">Mounting Holes</th>
                <th class="p-5">Assembled</th>
                <th class="p-5">Clips</th>
                <th class="p-5">Notches</th>
                <th class="p-5">Accessory</th>
                <th class="p-5 border-l">A</th>
                <th class="p-5">B</th>
                <th class="p-5">C</th>
                <th class="p-5 border-l"># Wide</th>
                <th class="p-5 border-r"># Deep</th>
                <th class="p-5">Unit $</th>
                <th class="p-5">Ext. $</th>
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var box in DrawerBoxes) {
                    <tr>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@box.ProductNumber</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@box.Qty</td>
                        @if (UseInches) {
                            <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@((MarkupString)box.Height.GetFormatedFraction())"</td>
                            <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@((MarkupString)box.Width.GetFormatedFraction())"</td>
                            <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@((MarkupString)box.Depth.GetFormatedFraction())"</td>
                        } else {
                            <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@box.Height.AsMillimeters().ToString("0.00")</td>
                            <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@box.Width.AsMillimeters().ToString("0.00")</td>
                            <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@box.Depth.AsMillimeters().ToString("0.00")</td>
                        }
                        <td class="whitespace-nowrap p-5 border-b dark:border-slate-500 dark:text-white">@box.Options.FrontMaterial</td>
                        <td class="whitespace-nowrap p-5 border-b dark:border-slate-500 dark:text-white">@box.Options.SideMaterial</td>
                        <td class="whitespace-nowrap p-5 border-b dark:border-slate-500 dark:text-white">@box.Options.BackMaterial</td>
                        <td class="whitespace-nowrap p-5 border-b dark:border-slate-500 dark:text-white">@box.Options.BottomMaterial</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@(box.Options.ScoopFront ? "Y" : "N")</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@(box.Options.Logo == LogoPosition.None ? "N" : "Y")</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@(box.Options.PostFinish ? "Y" : "N")</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@(box.Options.FaceMountingHoles ? "Y" : "N")</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@(box.Options.Assembled ? "Y" : "N")</td>
                        <td class="whitespace-nowrap p-5 border-b dark:border-slate-500 dark:text-white">@box.Options.Clips</td>
                        <td class="whitespace-nowrap p-5 border-b dark:border-slate-500 dark:text-white">@box.Options.Notches</td>
                        <td class="whitespace-nowrap p-5 border-b dark:border-slate-500 dark:text-white">@box.Options.Accessory</td>
                        @if (box.Options.UBoxDimensions is not null) {
                            @if (UseInches) {
                                <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@((MarkupString)box.Options.UBoxDimensions.A.GetFormatedFraction())"</td>
                                <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@((MarkupString)box.Options.UBoxDimensions.B.GetFormatedFraction())"</td>
                                <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@((MarkupString)box.Options.UBoxDimensions.C.GetFormatedFraction())"</td>
                            } else {
                                <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@box.Options.UBoxDimensions.A.AsMillimeters().ToString("0.00")</td>
                                <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@box.Options.UBoxDimensions.B.AsMillimeters().ToString("0.00")</td>
                                <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@box.Options.UBoxDimensions.C.AsMillimeters().ToString("0.00")</td>
                            }
                        } else {
                            <td class="whitespace-nowrap p-5 border-b dark:border-slate-500 dark:text-white"></td>
                            <td class="whitespace-nowrap p-5 border-b dark:border-slate-500 dark:text-white"></td>
                            <td class="whitespace-nowrap p-5 border-b dark:border-slate-500 dark:text-white"></td>
                        }
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@box.Options.FixedDivdersCounts?.WideCount</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@box.Options.FixedDivdersCounts?.DeepCount</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">$@box.UnitPrice.ToString("0.00")</td>
                        <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">$@((box.UnitPrice * box.Qty).ToString("0.00"))</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {

    [Parameter]
    public IEnumerable<DovetailDrawerBoxProduct> DrawerBoxes { get; set; } = Enumerable.Empty<DovetailDrawerBoxProduct>();
    [Parameter]
    public bool UseInches { get; set; } = false;

}
