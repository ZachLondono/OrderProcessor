@using Domain.Components
@using static Domain.Components.Button;

<Button Type="button" OnClickAsync="ExportOrder" Disabled="_isExecuting || OutputDirectory is null" Class="flex justify-center items-center h-10 w-36" Color="ButtonColor.Secondary">
    @if (_isExecuting) {
        <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
    }
    Save DWGs
</Button>

@code {

    [Parameter]
    public string? OutputDirectory { get; set; }

    [CascadingParameter]
    public IModalService Modal { get; set; } = default!;

    private bool _isExecuting = false;

    private async Task ExportOrder() {

        if (_isExecuting == true || OutputDirectory is null) {
            return;
        }

        _isExecuting = true;

        string drawingDirectory = Path.Combine(OutputDirectory, "Drawings");

        if (Directory.Exists(OutputDirectory) && !Directory.Exists(drawingDirectory)) {
            Directory.CreateDirectory(drawingDirectory);
        }

        var dialog = Modal.Show<BricsCADDocumentSelector>("Select Documents",
            new ModalParameters() {
                { "OutputDirectory", drawingDirectory }
            }, new ModalOptions() {
                HideHeader = false,
                Size = ModalSize.Medium
            });

        _ = await dialog.Result;

        _isExecuting = false;

    }
}
