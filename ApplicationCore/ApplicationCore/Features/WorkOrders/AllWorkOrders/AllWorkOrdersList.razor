@using ApplicationCore.Features.Shared.Components
@using ApplicationCore.Infrastructure;
@using static ApplicationCore.Features.Shared.Components.Button;

<table class="table-auto">

    <thead class="border-b border-slate-300">
        <tr class="dark:bg-slate-700 dark:text-gray-500">
            <th class="p-5">Name</th>
            <th class="p-5">Products</th>
            <th class="p-5">Status</th>
            <th class="p-5">
                <ToolTip Text="Refresh" UnderLine="false">
                    <button type="button" class="text-gray-700 @(DataContext!.IsLoading ? "animate-spin text-green-600" : "hover:text-sky-600")" @onclick="async () => await DataContext!.LoadWorkOrders()" disabled="@DataContext.IsLoading">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99" />
                        </svg>
                    </button>
                </ToolTip>
            </th>
        </tr>
    </thead>

    <tbody>

        @if (DataContext!.Error is not null) {

            <tr>
                <td colspan="4" class="whitespace-nowrap p-5 border-b text-center text-red-600">_error</td>
            </tr>

        } else if (DataContext.IsLoading) {

            <tr>
                <td colspan="4" class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">Loading...</td>
            </tr>

        } else if (!DataContext.WorkOrders.Any()) {

            <tr>
                <td colspan="4" class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">No work orders</td>
            </tr>

        } else {

            @foreach (var workOrder in DataContext.WorkOrders) {

                <tr>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@workOrder.OrderNumber</td>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@workOrder.Name</td>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">@workOrder.Status</td>
                    <td class="whitespace-nowrap p-5 border-b text-center dark:border-slate-500 dark:text-white">

                        @if (workOrder.Status != Status.Complete) {
                            <Button Style="ButtonStyle.Text" Color="ButtonColor.Primary" OnClickAsync="async () => await DataContext.CompleteWorkOrder(workOrder)">Complete</Button>
                        }

                        <Button Style="ButtonStyle.Text" Color="ButtonColor.Secondary" OnClickAsync="async () => await DataContext.DeleteWorkOrder(workOrder)">Delete</Button>

                    </td>
                </tr>

            }

        }

    </tbody>

</table>


@code {

    [Inject]
    public AllWorkOrdersListViewModel? DataContext { get; set; }

    protected override async Task OnInitializedAsync() {

        DataContext!.OnPropertyChanged += () => StateHasChanged();
        await DataContext!.LoadWorkOrders();

    }

}
