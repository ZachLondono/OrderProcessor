@using Microsoft.JSInterop
@using Domain.Components
@using static Domain.Components.Button
@inject ProgressModalViewModel DataContext
@inject IJSRuntime JSRuntime

<div class="mb-3">
    @if(DataContext.IsComplete) {
        <div class="text-center mb-2 font-bold text-green-500">@CompleteTitle</div>
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="mx-auto h-14 w-14 text-green-700">
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
    } else {
        <div class="text-center mb-4 font-bold text-blue-700">@InProgressTitle</div>
        <svg class="animate-spin mx-auto h-12 w-12 text-blue-700" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-10" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
    }
</div>

@if (ShowProgressBar) {
    <div class="mb-3">
        <progress value="@ProgressValue" max="100" class="w-full " />
    </div>
}

@if (_messages.Any()) {
    <div class="shadow-md max-h-48 w-full overflow-x-hidden overflow-y-scroll p-1.5 border border-gray-200" @ref="_messageBox">
        <table class="w-full border-collapse text-xs">							
            <tr>
                <td colspan="2" class="text-[0.5rem] italic">
                    Progress Log
                </td>
            </tr>

            @foreach (var message in _messages) {
                <tr class="border-b border-gray-100">
                    <td class="w-4">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor" class="w-4 h-4">
                            @switch (message.Type) {
                                case ProgressLogMessageType.Info:
                                    <path class="text-blue-700" stroke-linecap="round" stroke-linejoin="round" d="M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z" />
                                    break;

                                case ProgressLogMessageType.FileCreated:
                                case ProgressLogMessageType.Success:
                                    <path class="text-green-700" stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    break;

                                case ProgressLogMessageType.Error:
                                    <path class="text-red-700" stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    break;

                                default:
                                    break;
                            }
                        </svg>
                    </td>
                    @if (message.Type == ProgressLogMessageType.FileCreated) {
                        <td class="text-overflow-ellipsis">File generated <a class="underline cursor-pointer" onclick="@(() => DataContext.OpenFile(message.Message))">@message.Message</a></td>
                    } else {
                        <td class="text-overflow-ellipsis">@message.Message</td>
                    }
                </tr>
            }
        </table>
    </div>
}

<Button Style="ButtonStyle.Text" Disabled="@(!DataContext.IsComplete)" OnClickAsync="CloseDialog" Class="mt-3 float-right">Close</Button>
